#!/usr/bin/env zsh

# Arguments:
#   $1: format string (supports printf-style formatting)
#   $2-$n: arguments for format string
# Parameters:
#   --info: info message type
#   --warn: warning message type
#   --err: error message type
#   --ok: success message type
#   --debug: debug message type
#   --indent: indentation level
#   --fg: custom foreground color of the message
#   --bg: custom background color of the message
#   --source: enable source prefix (the calling function)
#   --block: extend background color to end of line
zc_print() {
  local fg bg source indent info warn err ok debug block
  zparseopts -D -E \
    -fg:=fg \
    -bg:=bg \
    -source:=source \
    -trace=trace \
    -indent:=indent \
    -info=info \
    -warn=warn \
    -err=err \
    -ok=ok \
    -debug=debug \
    -block=block

  # Ensure we have a message
  if [[ $# -eq 0 ]]; then
    print -P "%F{red}[ERR] No message provided%f"
    return 1
  fi

  local message="$1" && shift
  local prefix=""
  local caller=""
  local fg_color="white"
  local bg_color=""
  local block_end=${block:+"%E"}

  # Handle type-specific formatting
  if [[ -n "$info" ]]; then
    prefix="%F{blue}[INFO]%f "
  elif [[ -n "$warn" ]]; then
    prefix="%F{yellow}[WARN]%f "
  elif [[ -n "$err" ]]; then
    prefix="%F{red}[ERR]%f "
  elif [[ -n "$ok" ]]; then
    prefix="%F{green}[OK]%f "
  elif [[ -n "$debug" ]]; then
    prefix="%F{magenta}[DBG]%f "
  fi

  # Only add source prefix if --source parameter is present
  if [[ -n "$source" ]]; then
    if [[ -n "$funcstack[$source[2]]" ]]; then
      prefix+="${funcstack[$source[2]]#$ZCUSTOM/}: "
    else
      prefix+="zsh: "
    fi
  fi

  # Override with custom colors if specified
  [[ -n "$fg" ]] && fg_color="${fg[2]}"
  [[ -n "$bg" ]] && bg_color="${bg[2]}"

  # Build indentation
  local spaces=""
  for ((i=0; i<${indent[2]:-0}; i++)); do
    spaces+="  "
  done

  # Format the message with the provided arguments
  local formatted_message=$(printf "$message" "$@")

  if [[ $bg_color ]] then
    print -P "%K{$bg_color}${prefix}${spaces}%F{$fg_color}${formatted_message}%f${block_end}%k"
  else
    print -P "${prefix}${spaces}%F{$fg_color}${formatted_message}%f"
  fi

  # Print stack trace if --trace is specified
  if [[ -n "$trace" ]]; then
    local i=1
    local depth=0
    while [[ -n "$functrace[$i]" ]]; do
      local fn=${functrace[$((i++))]}

      [[ $fn == "(anon)" ]] && continue
      [[ $fn == /* && $fn != $ZCUSTOM* ]] && continue

      print -P "${spaces}  $((depth++)): ${fn#$ZCUSTOM/}"
    done
  fi
}
